{
	"info": {
		"_postman_id": "391f146f-3169-f6bd-c0cd-29f7c72deee1",
		"name": "Ipswich JAFFA Results API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1305764"
	},
	"item": [
		{
			"name": "V2",
			"item": [
				{
					"name": "Categories",
					"item": [
						{
							"name": "Read categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/categories",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"categories"
									]
								},
								"description": "Get events"
							},
							"response": []
						}
					]
				},
				{
					"name": "CourseTypes",
					"item": [
						{
							"name": "Read course types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/coursetypes",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"coursetypes"
									]
								},
								"description": "Get events"
							},
							"response": []
						}
					]
				},
				{
					"name": "Distances",
					"item": [
						{
							"name": "Read distances",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"schema\", pm.globals.get(\"distanceReadSchema\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/distances",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"distances"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Events",
					"item": [
						{
							"name": "Read events",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"schema\", pm.globals.get(\"eventReadSchema\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events"
									]
								},
								"description": "Get events"
							},
							"response": []
						},
						{
							"name": "Read event top attendees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/203/topAttendees",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"203",
										"topAttendees"
									]
								},
								"description": "Get events"
							},
							"response": []
						},
						{
							"name": "Read event insights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/203/insights",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"203",
										"insights"
									]
								},
								"description": "Get events"
							},
							"response": []
						},
						{
							"name": "Delete event",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues/48?deleteRaceAssociations=false",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues",
										"48"
									],
									"query": [
										{
											"key": "deleteRaceAssociations",
											"value": "false"
										}
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Update event - name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"name\",\n \"value\" : \"Test name changed\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/33",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"33"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Update event - invalid change",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"invalid\",\n \"value\" : \"I should not change\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/1922",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"1922"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Create event",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Test event. To be deleted.\",\n    \"website\" : \"www.test.co.uk\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Merge events",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Test event. To be deleted.\",\n    \"website\" : \"www.test.co.uk\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Genders",
					"item": [
						{
							"name": "Read genders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/genders",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"genders"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "GrandPrix",
					"item": [
						{
							"name": "Read Grand Prix scores",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/grandPrix/2018/2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"grandPrix",
										"2018",
										"2"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "HistoricRecords",
					"item": [
						{
							"name": "Read historic club records by distance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/historicrecords/distance/1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"historicrecords",
										"distance",
										"1"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read historic club records by category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation\r",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/historicrecords/category/1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"historicrecords",
										"category",
										"1"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Leagues",
					"item": [
						{
							"name": "Read leagues",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Create league",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"league\" : {\n\t\t\"name\" : \"53-12 Cross-country League\",\n\t\t\"startingYear\" : 2009,\n\t\t\"courseTypeId\" : 5\n\t}\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Delete league",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues/48?deleteRaceAssociations=false",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues",
										"48"
									],
									"query": [
										{
											"key": "deleteRaceAssociations",
											"value": "false"
										}
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read league races",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues/32",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues",
										"32"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Update league - name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"name\",\n \"value\" : \"53-12 Cross-country League\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues/33",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues",
										"33"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Meetings",
					"item": [
						{
							"name": "Read  meetings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/203/meetings",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"203",
										"meetings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Event Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/353/meetings/391",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"353",
										"meetings",
										"391"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Event Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"meeting\":{\"name\":\"1988\",\"fromDate\":\"1988-09-25\",\"toDate\":\"1988-09-25\"}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/353/meetings/",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"353",
										"meetings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + res.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/leagues/48?deleteRaceAssociations=false",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"leagues",
										"48"
									],
									"query": [
										{
											"key": "deleteRaceAssociations",
											"value": "false"
										}
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Races",
					"item": [
						{
							"name": "Read event races",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/events/1/races",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"events",
										"1",
										"races"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read event race",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/races/4",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"races",
										"4"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Create race",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"race\": {\r\n        \"eventId\": \"203\",\r\n        \"date\": \"1999-07-25\",\r\n        \"courseNumber\": null,\r\n        \"conditions\": null,\r\n        \"description\": \"Leg 4: 5K\",\r\n        \"venue\": null,\r\n        \"countryCode\": \"GB\",\r\n        \"county\": \"Suffolk\",\r\n        \"isGrandPrixRace\": \"0\",\r\n        \"area\": \"South\",\r\n        \"courseTypeId\": \"2\",\r\n        \"distanceId\": \"1\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/races",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"races"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Update event race - add league",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"league_id\",\n \"value\" : \"35\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/races/3527",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"races",
										"3527"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Records",
					"item": []
				},
				{
					"name": "Results",
					"item": [
						{
							"name": "Update result - add county champion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"county_champion\",\n \"value\" : \"1\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/93722",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"93722"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Add result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");",
											"",
											"var loginToken = pm.environment.get(\"loginToken\");",
											"console.log(\"loginToken: \" +pm.environment.get('loginToken'));",
											"",
											"if (loginToken) {",
											"    // Validate current Token - do we need to login?",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token/validate\",",
											"        method: 'POST',",
											"        header: {",
											"            \"Authorization\": \"Bearer \" + loginToken,",
											"            \"content-type\": \"application/json\",",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Token validation error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Token validation failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Token validation passed.\");",
											"        }",
											"    });",
											"}",
											"",
											"if (!loginToken) {",
											"    // Login and set Bearer Token",
											"    pm.sendRequest({",
											"        url: pm.environment.get(\"protocol\")+\"://\"+pm.environment.get(\"host\")+\"/wp-json/jwt-auth/v1/token\",",
											"        method: 'POST',",
											"        header: {",
											"            'content-type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ 'username': pm.environment.get(\"username\"), 'password': pm.environment.get(\"password\") })",
											"        }",
											"    }, function (error, response) {",
											"        if (error) {",
											"            console.log(\"Login request error: \" + error);",
											"            postman.setNextRequest(null);",
											"        } else if (response.code != 200) {",
											"            console.log(\"Login request failed: \" + response.json());",
											"            postman.setNextRequest(null);",
											"        } else {",
											"            console.log(\"Login request passed. Setting authorization bearer token: \" + response.json().token);",
											"            pm.environment.set(\"loginToken\", response.json().token);",
											"        }",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{loginToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"field\" : \"position\",\n \"value\" : \"232\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/93740",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"93740"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read runner results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/runner/116",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"runner",
										"116"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read runner personal best results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/runner/116/personalBests",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"runner",
										"116",
										"personalBests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read results ranked by percentage grading",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/wma",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"wma"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read results ranked by percentage grading, by year",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/wma?year=2019",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"wma"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read results ranked by percentage grading, by year and distance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/wma?year=2019&distanceId=1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"wma"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										},
										{
											"key": "distanceId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read results ranked by percentage grading, by year and distance and gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/wma?year=2019&distanceId=1&sexId=3",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"wma"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										},
										{
											"key": "distanceId",
											"value": "1"
										},
										{
											"key": "sexId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read result rankings by distance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/distance/1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"distance",
										"1"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						},
						{
							"name": "Read result rankings by distance and year",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/distance/1?year=2019",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"distance",
										"1"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read result rankings by distance and year and gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/results/ranking/distance/1?year=2019&sexId=2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"results",
										"ranking",
										"distance",
										"1"
									],
									"query": [
										{
											"key": "year",
											"value": "2019"
										},
										{
											"key": "sexId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "RunnerOfTheMonth",
					"item": []
				},
				{
					"name": "RunnerResults",
					"item": []
				},
				{
					"name": "Runners",
					"item": [
						{
							"name": "Read runners (logged out)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.set(\"schema\", pm.globals.get(\"runnerReadSchema\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/runners",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"runners"
									]
								},
								"description": "Get distances. Tested."
							},
							"response": []
						}
					]
				},
				{
					"name": "Statistics",
					"item": [
						{
							"name": "Read statistics: Yearly county results count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Yearly country results count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Yearly results count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/3",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Peronsal Best leaders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/4",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Event with most results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/6",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Runners with most results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/7",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read statistics: Runners with most results in a year",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// No schema - no validation",
											"pm.globals.unset(\"schema\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}/wp-json/ipswich-jaffa-api/v2/statistics/type/8",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"wp-json",
										"ipswich-jaffa-api",
										"v2",
										"statistics",
										"type",
										"8"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TeamResults",
					"item": []
				}
			]
		},
		{
			"name": "V3",
			"item": [
				{
					"name": "Results",
					"item": []
				},
				{
					"name": "RunnerOfTheMonth",
					"item": []
				},
				{
					"name": "Admin",
					"item": []
				}
			]
		},
		{
			"name": "results",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/results?eventId=1&fromDate=2001-01-01&toDate=2009-01-09&numberOfResults=27",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"results"
					],
					"query": [
						{
							"key": "eventId",
							"value": "1"
						},
						{
							"key": "fromDate",
							"value": "2001-01-01"
						},
						{
							"key": "toDate",
							"value": "2009-01-09"
						},
						{
							"key": "numberOfResults",
							"value": "27"
						}
					]
				},
				"description": "Get results"
			},
			"response": []
		},
		{
			"name": "results - DELETE",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"resultId\":1992}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/results",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"results"
					]
				},
				"description": "Delete a result"
			},
			"response": []
		},
		{
			"name": "runners - DELETE",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"runnerId\":1992}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/runners",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"runners"
					]
				},
				"description": "Delete a runner. Tests when no results and with results :)"
			},
			"response": []
		},
		{
			"name": "runners",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/runners",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"runners"
					]
				},
				"description": "Get runners. Tested."
			},
			"response": []
		},
		{
			"name": "events  - POST",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"event\":{\"name\":\"gavin2 - ignore\",\"distance_id\":\"4\",\"website\":\"www.ignoreme.com\",\"id\":0}}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/events",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"events"
					]
				},
				"description": "Add new event. Tested."
			},
			"response": []
		},
		{
			"name": "results - POST",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"result\":{\"eventId\":1,\"courseId\":1,\"runnerId\":\"1993\",\"date\":\"1950-01-01\", \"info\":\"test\", \"isGrandPrixResult\": 0, \"time\":\"05:01:02\", \"position\":999}}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/results",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"results"
					]
				},
				"description": "Add a result. All Ok."
			},
			"response": []
		},
		{
			"name": "event / courses",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/events/1/courses",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"events",
						"1",
						"courses"
					]
				},
				"description": "Get courses by event Id"
			},
			"response": []
		},
		{
			"name": "event merge",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"fromEventId\":9999, \"toEventId\":9999}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/events/merge",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"events",
						"merge"
					]
				},
				"description": "Merge events. Take all results from one event and combine with another. The old event is deleted."
			},
			"response": []
		},
		{
			"name": "runners - POST",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"runner\":{\"name\":\"gavin2 - ignore\",\"genderId\":\"1\",\"isCurrentMember\":\"1\",\"dateOfBirth\":\"1950-01-01\"}}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/runners",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"runners"
					]
				},
				"description": "Add runners. Tested."
			},
			"response": []
		},
		{
			"name": "events  - DELETE",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"eventId\":1301}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v1/events",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v1",
						"events"
					]
				},
				"description": "Delete an event. Tests when no results"
			},
			"response": []
		},
		{
			"name": "JWT Login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"username\" : \"admin\",\n \"password\" : \"clubjaffa\"\n}"
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/jwt-auth/v1/token",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"jwt-auth",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "JWT Validate Login",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC93d3cuaXBzd2ljaGVraWRlbi5jby51ayIsImlhdCI6MTUxOTMzMzg3NywibmJmIjoxNTE5MzMzODc3LCJleHAiOjE1MTk5Mzg2NzcsImRhdGEiOnsidXNlciI6eyJpZCI6IjMifX19.deQL48Gtz1ZGOTiTpZgoNBoASUW16ukkoIDWuqKLEgs",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://www.ipswichjaffa.org.uk/wp-json/jwt-auth/v1/token/Validate",
					"protocol": "http",
					"host": [
						"www",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"jwt-auth",
						"v1",
						"token",
						"Validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Genders",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://test.ipswichjaffa.org.uk/wp-json/ipswich-jaffa-api/v2/genders",
					"protocol": "http",
					"host": [
						"test",
						"ipswichjaffa",
						"org",
						"uk"
					],
					"path": [
						"wp-json",
						"ipswich-jaffa-api",
						"v2",
						"genders"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"var schema = pm.globals.get(\"schema\");",
					"if (schema) {",
					"    const schemaJson = JSON.parse(schema);",
					"    ",
					"    pm.test('Schema Validation', function() {",
					"        ",
					"        var result = tv4.validateResult(pm.response.json(), schemaJson);",
					"     ",
					"        if (!result.valid) {",
					"            console.log(result);",
					"        }",
					"     ",
					"        pm.expect(result.valid).to.be.true;",
					"    });",
					"}"
				]
			}
		}
	]
}